Royal Flush - Y
Four of a kind - Y
Flush - Y
Three of a kind - Y
Pair - Y
High card  - Y
Full house - Y
Two pairs - Y
Straight - Y
Straight flush - Y




2 different pairs
"2S 2C 4S 4D 5H"

Straight Flush
"TD AD KD QD JD"

///////////////////////////////////////////////////////////////////////////////////////////////////////////
		public void getCardValues() {
		ArrayList<String> cardValues = new ArrayList<>();
		cardValues.add("5C 9D 9D 7C 3C 2S KD TH 9H 8H");
		cardValues.add("2D 9C AS AH AC 2S KD TH 9H 8H");
		cardValues.add("");
		//String playerOne = getPlayerOneCardValues(cardValues.get(0));
		//String playerTwo = getPlayerTwoCardValues(cardValues.get(0));
		String highestCardPlayer1 = checkHighestCard("");
		System.out.print("Highest Card is: "+highestCardPlayer1);
		
		//System.out.println("Player 1 pair value: "+ checkPairValueFromCardValue(playerOne));
		//System.out.println("Player 2 pair value: "+ checkPairValueFromCardValue(playerTwo));
			
	}
	
	
	
	for(int i=0; i<playerCardValues.length; i++) {
				if(playerCardValues[i] != null) {
					for(int j=0; j<playerCardValues.length; j++) {
						if(playerCardValues[j] != null){
							firstValue = playerCardValues[i].charAt(0);
							int firstCharToInt = Integer.parseInt(String.valueOf(firstValue));
							char secondValue = playerCardValues[j].charAt(0);
							int secondCharToInt = Integer.parseInt(String.valueOf(secondValue));
							if(firstCharToInt > secondCharToInt) {
								integerCardValue = firstCharToInt;
								firstValue = (char)integerCardValue;
		
							}
						}
					}
				}
			}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	for(int k=0; k<integerCardValueList .size()-1; k++) {
				if(integerCardValueList.get(k) + 1 == integerCardValueList.get(k + 1)) {
					straightSequentialResult = "Y";
					
				}
					
			}